@page "/"
@page "/{PastaId}"
@using Blazorbin.Services
@using Blazorbin.Data
@using TinyMCE.Blazor

@inject DbService _dbService
@inject NavigationManager _navigationManager

<style>    
    .linguiee {
      padding: 12px 20px;
      margin: 8px 0;
      box-sizing: border-box;
      border: 2px solid #ccc;
      border-radius: 4px;
      width: 80%;
    }
    
    .linguiee:focus {
      border: 2px solid #555;
    }
    
    .linguiee-btn {
      padding: 12px 20px;
      background-color: #4CAF50;
      border: none;
      border-radius: 4px;
      color: white;
      cursor: pointer;
      /*width: 20%;*/
      /*height: 90%;*/
      margin-top: 8px;
    }
    
    .linguiee-btn:hover {
      background-color: #45a049;
    }
    
    .linguiee-secondary-btn {
      padding: 12px 20px;
      background-color: #f44336;
      border: none;
      border-radius: 4px;
      color: white;
      cursor: pointer;
      /*width: 20%;*/
      /*height: 90%;*/
      margin-top: 8px;
    }
    
    .linguiee-secondary-btn:hover {
      background-color: #da190b;
    }

    .container {
      display: flex;
      flex-direction: column;
      min-height: 100vh;
    }
    
    .container-row {
        display: flex;
        flex-direction: row;
    }
    
    header, footer {
      background-color: lightgray;
      /*padding: 1rem;*/
      text-align: center;
    }
    
    .sidebar {
      background-color: #333;
      /*padding: 1rem;*/
      width: 15%;
      flex: 0 0 auto;
      color: white;
    }
    
    .sidebar a {
        color:white;
    }
    
    main {
      background-color: white;
      flex: 1;
      padding: 1rem;
      overflow: auto;
    }
    
    @@media (max-width: 767px) {
      .container {
        flex-direction: column;
      }
    
      .sidebar {
        width: 100%;
        height: auto;
      }
    }

</style>

<div class="container">
    <div class="container-row">
      <nav class="sidebar">
        <ul>
            <li><a href="#">Home</a></li>
            @foreach(var pasta in _pastas)
            {
                <li><button @onclick="() => GoToPasta(pasta.Id.ToString())">@pasta.Title</button></li>
            }
        </ul>
      </nav>
        <main>
            <input class="linguiee" @bind="_pastaBin.Title"/>
            @if (_editable)
            {
                <button class="linguiee-btn" @onclick="UpdatePasta">Update</button>
                <button class="linguiee-secondary-btn" @onclick="ReloadNew">New</button>
            }
            else
            {
                <button class="linguiee-btn" @onclick="CreatePasta">Save</button>
            }
            <Editor @bind-Value="@_pastaBin.Content" ScriptSrc="js/tinymce.min.js" />
        </main>
    </div>
</div>

@code
{
    [Parameter]
    public string? PastaId { get; set; }
    
    private PastaBin _pastaBin = new(){Title = "Untitled", Content = ""};
    
    private bool _editable;
    
    private List<PastaBin> _pastas = new();

    protected override async Task OnInitializedAsync()
    {
        if(PastaId != null)
        {
            _pastaBin = await _dbService.GetPasta(PastaId);
            _editable = true;
        }
        else
        {
            _pastaBin = new PastaBin()
            {
                Title = "Untitled",
                Content = "This is my pasta!"
            };
        }
        
        await base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            _pastas = await _dbService.GetAllPastas();

            InvokeAsync(StateHasChanged);
        }
    }


    private async Task ReloadNew()
    {
        _pastaBin = new PastaBin()
        {
            Title = "Untitled",
            Content = "This is my pasta!"
        };
        
        _editable = false;
        _navigationManager.NavigateTo("/");
    }
    
    private void GoToPasta(string id)
    {
        _navigationManager.NavigateTo("/" + id);
    }

    private async Task CreatePasta()
    {
        var result = await _dbService.CreatePasta(_pastaBin);
        
        _editable = true;
        _navigationManager.NavigateTo("/" + result.Id);
    }

    private async Task UpdatePasta()
    {
        _dbService.UpdatePasta(_pastaBin);

        await Task.CompletedTask;
    }
}